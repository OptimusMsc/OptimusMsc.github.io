<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-09-15T16:20:17+08:00</updated><id>http://localhost:4000/</id><title type="html">Wayne</title><subtitle>Wait me,Big data</subtitle><entry><title type="html">R-缺失值</title><link href="http://localhost:4000/R-%E7%BC%BA%E5%A4%B1%E5%80%BC/" rel="alternate" type="text/html" title="R-缺失值" /><published>2017-09-14T00:00:00+08:00</published><updated>2017-09-14T00:00:00+08:00</updated><id>http://localhost:4000/R-%E7%BC%BA%E5%A4%B1%E5%80%BC</id><content type="html" xml:base="http://localhost:4000/R-%E7%BC%BA%E5%A4%B1%E5%80%BC/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#缺失值missingvalue&quot; id=&quot;markdown-toc-缺失值missingvalue&quot;&gt;缺失值(missing value)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#使用isna和isnan判断向量中是否含有缺失值&quot; id=&quot;markdown-toc-使用isna和isnan判断向量中是否含有缺失值&quot;&gt;使用is.na( )和is.nan( )判断向量中是否含有缺失值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;缺失值missingvalue&quot;&gt;缺失值(missing value)&lt;/h2&gt;
&lt;p&gt;– NA/NaN:NaN属于NA,NA不属于NaN(NaN一般用来表示数字的缺失值，而NA可以表示任何类型的缺失值)&lt;br /&gt;
– NA有类型属性：integer NA，character NA等&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;使用isna和isnan判断向量中是否含有缺失值&quot;&gt;使用is.na( )和is.nan( )判断向量中是否含有缺失值&lt;/h2&gt;
&lt;p&gt; 例如：&lt;br /&gt;
  若输入&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x &amp;lt;- c(1,NA,2,NA,3)
is.na(x)
is.nan(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行后会返回&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;is.na(x)
[1] FALSE  TRUE FALSE  TRUE FALSE
is.nan(x)
[1] FALSE FALSE FALSE FALSE FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;  若输入&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;y &amp;lt;- c(1,NaN,2,NaN,3)
is.na(y)
is.nan(y)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行后会返回&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;is.na(y)
[1] FALSE  TRUE FALSE  TRUE FALSE
is.nan(y)
[1] FALSE  TRUE FALSE  TRUE FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;说明，如果y中包含NAN，则可以被is.na( )检测出来&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="缺失值" /><summary type="html"></summary></entry><entry><title type="html">R-数据框</title><link href="http://localhost:4000/R-%E6%95%B0%E6%8D%AE%E6%A1%86/" rel="alternate" type="text/html" title="R-数据框" /><published>2017-09-14T00:00:00+08:00</published><updated>2017-09-14T00:00:00+08:00</updated><id>http://localhost:4000/R-%E6%95%B0%E6%8D%AE%E6%A1%86</id><content type="html" xml:base="http://localhost:4000/R-%E6%95%B0%E6%8D%AE%E6%A1%86/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#数据框data-frame&quot; id=&quot;markdown-toc-数据框data-frame&quot;&gt;数据框(data frame)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;数据框data-frame&quot;&gt;数据框(data frame)&lt;/h2&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="数据框" /><summary type="html"></summary></entry><entry><title type="html">R-因子</title><link href="http://localhost:4000/R-%E5%9B%A0%E5%AD%90/" rel="alternate" type="text/html" title="R-因子" /><published>2017-09-09T00:00:00+08:00</published><updated>2017-09-09T00:00:00+08:00</updated><id>http://localhost:4000/R-%E5%9B%A0%E5%AD%90</id><content type="html" xml:base="http://localhost:4000/R-%E5%9B%A0%E5%AD%90/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#因子factor&quot; id=&quot;markdown-toc-因子factor&quot;&gt;因子(factor)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用factor函数创建因子&quot; id=&quot;markdown-toc-使用factor函数创建因子&quot;&gt;使用factor( )函数创建因子&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用table查看当前因子的整体情况&quot; id=&quot;markdown-toc-使用table查看当前因子的整体情况&quot;&gt;使用table( )查看当前因子的整体情况&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用unclass去掉因子的levels属性查看因子的内容&quot; id=&quot;markdown-toc-使用unclass去掉因子的levels属性查看因子的内容&quot;&gt;使用unclass( )去掉因子的levels属性，查看因子的内容&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;因子factor&quot;&gt;因子(factor)&lt;/h2&gt;
&lt;p&gt;– 处理&lt;em&gt;分类&lt;/em&gt;数据/有序vs.无序&lt;br /&gt;
– 整数向量+标签(label)(优于整数向量)&lt;br /&gt;
– Male/Female vs. 1/2(可以把性别存为1/2)&lt;br /&gt;
– 常用于lm( ),glm( )&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用factor函数创建因子&quot;&gt;使用factor( )函数创建因子&lt;/h3&gt;
&lt;p&gt; 例如：x&amp;lt;-factor(c(“female”,”female”,”male”,”male”,”female”))，会得到&lt;br /&gt;
`
[1] female female male   male   female&lt;br /&gt;
Levels: female male&lt;br /&gt;
`
第一行是x的内容，第二行代表当前的因子包含两个水平female和male&lt;br /&gt;
 若要自定义水平，则可以在factor( )函数中自行添加，代码如下&lt;br /&gt;
 y &amp;lt;- factor(c(“female”,”female”,”male”,”male”,”female”),levels = c(“male”,”female”))，会得到&lt;br /&gt;
`
[1] female female male   male   female&lt;br /&gt;
Levels: male female&lt;br /&gt;
`
 与x相比，y的内容相同，但是水平的顺序不同，利用levels可以设定基线水平&lt;br /&gt;
 &lt;strong&gt;ps:levels是因子的一个属性。levels中，谁在前谁就是基线水平&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用table查看当前因子的整体情况&quot;&gt;使用table( )查看当前因子的整体情况&lt;/h3&gt;
&lt;p&gt; 输入table(x)会得到&lt;br /&gt;
`	
female   male 
     3      2 
`&lt;/p&gt;

&lt;h3 id=&quot;使用unclass去掉因子的levels属性查看因子的内容&quot;&gt;使用unclass( )去掉因子的levels属性，查看因子的内容&lt;/h3&gt;
&lt;p&gt; 输入unclass(x)，会得到&lt;br /&gt;
[1] 1 1 2 2 1&lt;br /&gt;
attr(,”levels”)&lt;br /&gt;
[1] “female” “male”&lt;br /&gt;
 可以看到，unclass后，内容变成了&lt;br /&gt; 
&lt;code class=&quot;highlighter-rouge&quot;&gt;1 1 2 2 1&lt;/code&gt;&lt;br /&gt;
 曾经的属性是levels，它有两个水平female和male&lt;br /&gt;
 去掉属性之后的因子，又变成了整数类型。输入class(unclass(x))，会得到integer&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="因子" /><summary type="html"></summary></entry><entry><title type="html">R-列表</title><link href="http://localhost:4000/R-%E5%88%97%E8%A1%A8/" rel="alternate" type="text/html" title="R-列表" /><published>2017-09-09T00:00:00+08:00</published><updated>2017-09-09T00:00:00+08:00</updated><id>http://localhost:4000/R-%E5%88%97%E8%A1%A8</id><content type="html" xml:base="http://localhost:4000/R-%E5%88%97%E8%A1%A8/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#列表list&quot; id=&quot;markdown-toc-列表list&quot;&gt;列表(list)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用list函数创建列表&quot; id=&quot;markdown-toc-使用list函数创建列表&quot;&gt;使用list( )函数创建列表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#可以使用列表和dimnames函数为矩阵的每行每列命名添加name属性&quot; id=&quot;markdown-toc-可以使用列表和dimnames函数为矩阵的每行每列命名添加name属性&quot;&gt;可以使用列表和dimnames( )函数为矩阵的每行每列命名(添加name属性)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;列表list&quot;&gt;列表(list)&lt;/h2&gt;
&lt;p&gt;– 可以包含不同类型的对象&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用list函数创建列表&quot;&gt;使用list( )函数创建列表&lt;/h3&gt;
&lt;p&gt; 里面的参数为要传入list中的元素&lt;br /&gt;
 例如：&lt;br /&gt;
  使用l1&amp;lt;-list(“a”,2,10L,3+4i,TRUE)可以创建一个第一个元素为字符”a”，第二个元素为数值2，第三个元素为整数10，第四个元素为复数3+4i，第五个元素为逻辑TRUE的列表&lt;br /&gt;
  使用l2&amp;lt;-list(a=1,b=2,c=3)可以创建元素分别为1,2,3的数组，且三个元素的name分别为a,b,c&lt;br /&gt;
  使用l3&amp;lt;-list(c(1,2,3),c(4,5,6,7))可以创建每个元素包含不止一个元素的列表，例中l3包含2个元素，第一个元素包含1,2,3三个元素，第二个元素包含4,5,6,7四个元素&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;可以使用列表和dimnames函数为矩阵的每行每列命名添加name属性&quot;&gt;可以使用列表和dimnames( )函数为矩阵的每行每列命名(添加name属性)&lt;/h3&gt;
&lt;p&gt; 例如：新建2行3列的矩阵x&amp;lt;-matrix(1:6,nrow=2,ncol=3)，然后输入dimnames(x)&amp;lt;-list(c(“a”,”b”),c(“c”,”d”,”e”))，即可得到&lt;br /&gt;
`
  c d e
a 1 3 5
b 2 4 6
`&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="列表" /><summary type="html"></summary></entry><entry><title type="html">R-矩阵和数组</title><link href="http://localhost:4000/R-%E7%9F%A9%E9%98%B5%E5%92%8C%E6%95%B0%E7%BB%84/" rel="alternate" type="text/html" title="R-矩阵和数组" /><published>2017-09-08T00:00:00+08:00</published><updated>2017-09-08T00:00:00+08:00</updated><id>http://localhost:4000/R-%E7%9F%A9%E9%98%B5%E5%92%8C%E6%95%B0%E7%BB%84</id><content type="html" xml:base="http://localhost:4000/R-%E7%9F%A9%E9%98%B5%E5%92%8C%E6%95%B0%E7%BB%84/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#矩阵matrix&quot; id=&quot;markdown-toc-矩阵matrix&quot;&gt;矩阵(matrix)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用matrix函数创建矩阵&quot; id=&quot;markdown-toc-使用matrix函数创建矩阵&quot;&gt;使用matrix( )函数创建矩阵&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#采用先定义一个向量再为它添加维度属性的方法创建矩阵&quot; id=&quot;markdown-toc-采用先定义一个向量再为它添加维度属性的方法创建矩阵&quot;&gt;采用先定义一个向量，再为它添加维度属性的方法创建矩阵&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#矩阵的拼接&quot; id=&quot;markdown-toc-矩阵的拼接&quot;&gt;矩阵的拼接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#数组array&quot; id=&quot;markdown-toc-数组array&quot;&gt;数组(array)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用array函数创建数组&quot; id=&quot;markdown-toc-使用array函数创建数组&quot;&gt;使用array( )函数创建数组&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;矩阵matrix&quot;&gt;矩阵(matrix)&lt;/h2&gt;
&lt;p&gt;– 向量+维度属性(整数向量:nrow,ncol)&lt;br /&gt;
 &lt;strong&gt;ps:矩阵的维度只能为2&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用matrix函数创建矩阵&quot;&gt;使用matrix( )函数创建矩阵&lt;/h3&gt;
&lt;p&gt; 这个函数里至少要传入两个参数nrow和ncol，若要赋值，在应写在这两个参数前&lt;br /&gt;
 例如：&lt;br /&gt;
  创建一个3行2列，元素为空的矩阵x1，代码为x&amp;lt;-matrix(nrow=3,ncol=2)&lt;br /&gt;
  若要创建一个3行2列，元素为1到6的矩阵，则代码为x&amp;lt;-matrix(1:6,nrow=3,ncol=2)&lt;br /&gt;
&lt;strong&gt; ps:R是列优先语言,一列填满后才会填下一列&lt;br /&gt;
  dim( )可以查看矩阵的维度属性。例如dim(x)，会显示3 2，即x为一个3行2列的矩阵&lt;br /&gt;
  attributes( )可以查看矩阵的所有属性。例如attributes(x)，会显示$dim 3 2&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;采用先定义一个向量再为它添加维度属性的方法创建矩阵&quot;&gt;采用先定义一个向量，再为它添加维度属性的方法创建矩阵&lt;/h3&gt;
&lt;p&gt; 例如：y&amp;lt;-1:6，创建一个1到6的向量，然后使用dim(y)&amp;lt;-c(2,3)，为其添加2行3列的属性即可。&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;矩阵的拼接&quot;&gt;矩阵的拼接&lt;/h3&gt;
&lt;p&gt; 定义一个与y行列数相同的矩阵y2&amp;lt;-matrix(2:7,nrow=2,ncol=3)&lt;br /&gt;
– 使用rbind( )函数按行拼接&lt;br /&gt;
 例如：rbind(y,y2)，则会得到一个4行3列的矩阵&lt;br /&gt;
`
     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6
[3,]    2    4    6
[4,]    3    5    7
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;
--&amp;amp;nbsp;使用cbind(&amp;amp;nbsp;)函数按列拼接&amp;lt;br&amp;gt;
&amp;amp;emsp;例如：cbind(y,y2)，则会得到一个2行6列的矩阵&amp;lt;br&amp;gt;
&lt;/code&gt;
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    1    3    5    2    4    6
[2,]    2    4    6    3    5    7
`&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;数组array&quot;&gt;数组(array)&lt;/h2&gt;
&lt;p&gt;– 与矩阵类似，但是维度可以大于2&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用array函数创建数组&quot;&gt;使用array( )函数创建数组&lt;/h3&gt;
&lt;p&gt; 这个函数里需要传入两个参数，第一个为数组的内容，第二个为维度的设定&lt;br /&gt;
 例如：&lt;br /&gt;
  z&amp;lt;-array(1:24,dim=c(4,6))，即可得到一个4行6列的二维数组
`
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    1    5    9   13   17   21
[2,]    2    6   10   14   18   22
[3,]    3    7   11   15   19   23
[4,]    4    8   12   16   20   24
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;z1&amp;lt;-array(1:24,dim=c(2,3,4))，即可得到一个每个维度都是2行3列的二维数组的四维数组&amp;lt;br&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;**ps:排列数字时，会先按列排完第一个维度中的2行3列矩阵，再排第二个维度，以此类推&amp;lt;br&amp;gt;**
&lt;/code&gt;
, , 1&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [,1] [,2] [,3] [1,]    1    3    5 [2,]    2    4    6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;, , 2&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [,1] [,2] [,3] [1,]    7    9   11 [2,]    8   10   12
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;, , 3&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [,1] [,2] [,3] [1,]   13   15   17 [2,]   14   16   18
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;, , 4&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [,1] [,2] [,3] [1,]   19   21   23 [2,]   20   22   24 `&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="矩阵" /><category term="数组" /><summary type="html"></summary></entry><entry><title type="html">R-向量</title><link href="http://localhost:4000/R-%E5%90%91%E9%87%8F/" rel="alternate" type="text/html" title="R-向量" /><published>2017-09-08T00:00:00+08:00</published><updated>2017-09-08T00:00:00+08:00</updated><id>http://localhost:4000/R-%E5%90%91%E9%87%8F</id><content type="html" xml:base="http://localhost:4000/R-%E5%90%91%E9%87%8F/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#向量vector&quot; id=&quot;markdown-toc-向量vector&quot;&gt;向量(vector)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用vector函数创建向量&quot; id=&quot;markdown-toc-使用vector函数创建向量&quot;&gt;使用vector( )函数创建向量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用创建连续的整型向量&quot; id=&quot;markdown-toc-使用创建连续的整型向量&quot;&gt;使用&lt;strong&gt;:&lt;/strong&gt;创建连续的整型向量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用c函数创建向量&quot; id=&quot;markdown-toc-使用c函数创建向量&quot;&gt;使用c( )函数创建向量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用as类型名变量名来对变量进行类型的强制转换&quot; id=&quot;markdown-toc-使用as类型名变量名来对变量进行类型的强制转换&quot;&gt;使用as.类型名(变量名)来对变量进行类型的强制转换&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用names为向量中的元素添加名称&quot; id=&quot;markdown-toc-使用names为向量中的元素添加名称&quot;&gt;使用names( )为向量中的元素添加名称&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;向量vector&quot;&gt;向量(vector)&lt;/h2&gt;
&lt;p&gt;– 只能包含同一类型的对象&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用vector函数创建向量&quot;&gt;使用vector( )函数创建向量&lt;/h3&gt;
&lt;p&gt; 函数格式:vector(“元素类型”,该向量包含的元素个数)&lt;br /&gt;
 例如:创建一个含有10个字符型元素的向量x，代码为x&amp;lt;-vector(“character”,length=10)&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用创建连续的整型向量&quot;&gt;使用&lt;strong&gt;:&lt;/strong&gt;创建连续的整型向量&lt;/h3&gt;
&lt;p&gt; 例如:创建一个含有数字1到4的向量x1，代码为x1&amp;lt;-1:4&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用c函数创建向量&quot;&gt;使用c( )函数创建向量&lt;/h3&gt;
&lt;p&gt; 例如:创建一个含有数字1到4的向量x2，代码为x2&amp;lt;-c(1,2,3,4)&lt;br /&gt;
 &lt;strong&gt;ps:如果你往c( )中传入的元素类型不同的话，R会自动尽量把它们转换成同一类型的元素&lt;br /&gt;
 例如:x3&amp;lt;-c(TRUE,10,”a”)，则会得到字符型向量x3 chr[1:3] “TRUE” “10” “a”&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用as类型名变量名来对变量进行类型的强制转换&quot;&gt;使用as.类型名(变量名)来对变量进行类型的强制转换&lt;/h3&gt;
&lt;p&gt; 例如:x&amp;lt;-4,as.character(x)，即可将x转化为字符型变量，常用的还有as.numeric( )，as.logical( )等&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用names为向量中的元素添加名称&quot;&gt;使用names( )为向量中的元素添加名称&lt;/h3&gt;
&lt;p&gt; 例如:引用上文中的x1，names(x1)&amp;lt;-c(“a”,”b”,”c”,”d”)，运行完之后得到&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;x1&amp;lt;br&amp;gt;
a b c d&amp;lt;br&amp;gt;
1 2 3 4&lt;/code&gt;&lt;br /&gt;
即第1,2,3,4个元素对应的名称为a,b,c,d&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="向量" /><summary type="html"></summary></entry><entry><title type="html">R-常见对象和属性</title><link href="http://localhost:4000/R-%E5%B8%B8%E8%A7%81%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%B1%9E%E6%80%A7/" rel="alternate" type="text/html" title="R-常见对象和属性" /><published>2017-08-27T00:00:00+08:00</published><updated>2017-08-27T00:00:00+08:00</updated><id>http://localhost:4000/R-%E5%B8%B8%E8%A7%81%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%B1%9E%E6%80%A7</id><content type="html" xml:base="http://localhost:4000/R-%E5%B8%B8%E8%A7%81%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%B1%9E%E6%80%A7/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#r中对象的5种基本类型classes-of-objects&quot; id=&quot;markdown-toc-r中对象的5种基本类型classes-of-objects&quot;&gt;R中对象的5种基本类型(classes of objects)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#r中的赋值符号为-&quot; id=&quot;markdown-toc-r中的赋值符号为-&quot;&gt;R中的赋值符号为&amp;lt;-&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#查看变量的值的方法&quot; id=&quot;markdown-toc-查看变量的值的方法&quot;&gt;查看变量的值的方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#查看对象的类型&quot; id=&quot;markdown-toc-查看对象的类型&quot;&gt;查看对象的类型&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#r中对象的属性attribute&quot; id=&quot;markdown-toc-r中对象的属性attribute&quot;&gt;R中对象的属性(attribute)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;r中对象的5种基本类型classes-of-objects&quot;&gt;R中对象的5种基本类型(classes of objects)&lt;/h2&gt;
&lt;p&gt;– 字符(character)&lt;br /&gt;
– 数值(numeric:real numbers)&lt;br /&gt;
– 整数(integer)&lt;br /&gt;
– 复数(complex):1+2i&lt;br /&gt;
– 逻辑(logical:True/False)&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;r中的赋值符号为-&quot;&gt;R中的赋值符号为&amp;lt;-&lt;/h3&gt;
&lt;p&gt; 例如，想新建一个值为1的变量x，则输入x&amp;lt;-1，回车即可&lt;br /&gt;
 创建字符型变量，y&amp;lt;-“hello world”&lt;br /&gt;
 创建逻辑型变量，t&amp;lt;-TRUE，需要注意的是，R中的TRUE和FALSE要全部大写&lt;br /&gt;
 创建复数型变量，x&amp;lt;-1+2i&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看变量的值的方法&quot;&gt;查看变量的值的方法&lt;/h3&gt;
&lt;p&gt; 输入变量名，回车即可&lt;br /&gt;
 例如：输入x，回车，则会显示[1] 1.其中[ ]中的1代表后面所接的元素，是x中的第1个元素；没有[ ]的1代表x中存储的内容为1&lt;br /&gt;
 &lt;em&gt;右侧Global Environment中也会显示变量名和对应的值&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看对象的类型&quot;&gt;查看对象的类型&lt;/h3&gt;
&lt;p&gt; 使用class()函数&lt;br /&gt;
 例如：输入class(x)，回车，则可以看到x的类型为”numeric”&lt;br /&gt;
 如果想强调变量类型为整数，则只需要在赋值的时候，在数字后面加上L(大写)，例如：x&amp;lt;-2L，此时class(x)会显示为”integer”&lt;br /&gt;
&lt;strong&gt;tips:&lt;br /&gt;
 1.如果用”=”代替”&amp;lt;-“，在99%的情况下都不会报错，但是某些及端情况会出错，所以应该尽可能使用标准赋值符号”&amp;lt;-“&lt;br /&gt;
 2.R是大小写敏感的语言，x和X会代表不同的变量，注意区分大小写&lt;br /&gt;
 3.RStudio中”#”为注释符，后面跟的内容为注释内容&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;r中对象的属性attribute&quot;&gt;R中对象的属性(attribute)&lt;/h2&gt;
&lt;p&gt;– 名称(name)&lt;br /&gt;
– 维度(dimensions:matrix,array)&lt;br /&gt;
– 类型(class)&lt;br /&gt;
– 长度(length)&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="对象和属性" /><summary type="html"></summary></entry><entry><title type="html">R-安装与帮助</title><link href="http://localhost:4000/R-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%B8%AE%E5%8A%A9/" rel="alternate" type="text/html" title="R-安装与帮助" /><published>2017-08-20T00:00:00+08:00</published><updated>2017-08-20T00:00:00+08:00</updated><id>http://localhost:4000/R-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%B8%AE%E5%8A%A9</id><content type="html" xml:base="http://localhost:4000/R-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%B8%AE%E5%8A%A9/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#r的获取与安装&quot; id=&quot;markdown-toc-r的获取与安装&quot;&gt;R的获取与安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rstudio的获取与安装&quot; id=&quot;markdown-toc-rstudio的获取与安装&quot;&gt;RStudio的获取与安装&lt;br /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#r中的包package&quot; id=&quot;markdown-toc-r中的包package&quot;&gt;R中的包(package)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#扩展r基本功能的机制集成了众多函数&quot; id=&quot;markdown-toc-扩展r基本功能的机制集成了众多函数&quot;&gt;扩展R基本功能的机制/集成了众多函数&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#通常在cranbioconductorgithub等上面获取包&quot; id=&quot;markdown-toc-通常在cranbioconductorgithub等上面获取包&quot;&gt;通常在CRAN/Bioconductor/GitHub等上面获取包&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#获取帮助&quot; id=&quot;markdown-toc-获取帮助&quot;&gt;获取帮助&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#函数名r的帮助文档&quot; id=&quot;markdown-toc-函数名r的帮助文档&quot;&gt;?函数名(R的帮助文档)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#googlestackoverflow&quot; id=&quot;markdown-toc-googlestackoverflow&quot;&gt;Google/Stackoverflow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#如何问问题&quot; id=&quot;markdown-toc-如何问问题&quot;&gt;如何问问题&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;r的获取与安装&quot;&gt;R的获取与安装&lt;/h2&gt;

&lt;p&gt;R的下载地址:cran.r-project.org&lt;br /&gt;
Windows操作系统下，选择“Download R for Windows”，然后选择“base”，会显示当前R的最新版本，点击下载&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;rstudio的获取与安装&quot;&gt;RStudio的获取与安装&lt;br /&gt;&lt;/h2&gt;
&lt;p&gt;RStudio的下载地址:rstudio.com&lt;br /&gt;
在RStudio模块下点击Download，进入版本类型界面，选择RStudio Desktop，然后根据系统版本选择对应的安装程序进行下载&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;r中的包package&quot;&gt;R中的包(package)&lt;/h2&gt;
&lt;h3 id=&quot;扩展r基本功能的机制集成了众多函数&quot;&gt;扩展R基本功能的机制/集成了众多函数&lt;/h3&gt;
&lt;h3 id=&quot;通常在cranbioconductorgithub等上面获取包&quot;&gt;通常在CRAN/Bioconductor/GitHub等上面获取包&lt;/h3&gt;
&lt;p&gt;– 直接在RStudio的命令行中输入以下代码即可安装包&lt;br /&gt;
 install.packages(“包名”)  //在CRAN上获取包&lt;br /&gt;
 install_github()  //在GitHub上获取包&lt;br /&gt;
 例如:安装机器学习需要用到的包caret,打开RStudio，在命令行中输入install.packages(“caret”)，键入回车即可&lt;br /&gt;
– 安装完之后，使用包内的函数之前，需要加载对应的包，加载的代码为library(包名)&lt;br /&gt;
 例如:library(caret)&lt;br /&gt;
– tips:当包加载完之后，直接在命令行输入data()，回车，就能打开包中所有所含函数集的详细信息;&lt;br /&gt;
 如果想查看某一个数据集的具体信息，只需在命令行中输入 ?数据集名称 ，即可。&lt;br /&gt;
 例如?InsectSprays,即(帮助文档)可查看InsectSprays数据集的详细信息(帮助文档)&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;获取帮助&quot;&gt;获取帮助&lt;/h2&gt;
&lt;h3 id=&quot;函数名r的帮助文档&quot;&gt;?函数名(R的帮助文档)&lt;/h3&gt;
&lt;h3 id=&quot;googlestackoverflow&quot;&gt;Google/Stackoverflow&lt;/h3&gt;
&lt;h3 id=&quot;如何问问题&quot;&gt;如何问问题&lt;/h3&gt;
&lt;p&gt;- 操作系统、版本、哪一步产生的错误、预期是什么、得到的结果是什么、其他有用的信息&lt;br /&gt;
- 例如:Win7 R 3.2.0 lm()  “seg fault on large data frame”&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="大数据" /><category term="R" /><category term="环境配置" /><summary type="html"></summary></entry></feed>